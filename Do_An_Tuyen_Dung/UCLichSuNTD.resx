<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox3.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>